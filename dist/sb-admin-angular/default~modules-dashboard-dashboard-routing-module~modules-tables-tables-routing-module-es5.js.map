{"version":3,"sources":["webpack:///src/modules/tables/components/ng-bootstrap-table/ng-bootstrap-table.component.html","webpack:///src/modules/tables/data/countries.ts","webpack:///src/modules/tables/guards/tables.guard.ts","webpack:///src/modules/tables/services/index.ts","webpack:///src/modules/tables/components/ng-bootstrap-table/ng-bootstrap-table.component.scss","webpack:///src/modules/tables/containers/tables/tables.component.html","webpack:///src/modules/tables/components/index.ts","webpack:///src/modules/tables/tables.module.ts","webpack:///src/modules/tables/containers/tables/tables.component.ts","webpack:///src/modules/tables/containers/tables/tables.component.scss","webpack:///src/modules/tables/services/country.service.ts","webpack:///src/modules/tables/components/ng-bootstrap-table/ng-bootstrap-table.component.ts","webpack:///src/modules/tables/components/sort-icon/sort-icon.component.scss","webpack:///src/modules/tables/components/sort-icon/sort-icon.component.ts","webpack:///src/modules/tables/components/sort-icon/sort-icon.component.html","webpack:///src/modules/tables/guards/index.ts","webpack:///src/modules/tables/directives/index.ts","webpack:///src/modules/tables/services/tables.service.ts","webpack:///src/modules/tables/directives/sortable.directive.ts","webpack:///src/modules/tables/containers/index.ts"],"names":["COUNTRIES","id","name","flag","area","population","TablesGuard","services","components","TablesModule","imports","providers","declarations","exports","TablesComponent","selector","changeDetection","OnPush","template","compare","v1","v2","sort","countries","column","direction","a","b","res","matches","country","term","pipe","toLowerCase","includes","transform","CountryService","_loading$","_search$","_countries$","_total$","_state","page","pageSize","searchTerm","sortColumn","sortDirection","next","_search","subscribe","result","total","patch","Object","assign","filter","length","slice","asObservable","_set","providedIn","NgBootstrapTableComponent","countryService","changeDetectorRef","countries$","total$","sortedColumn","sortedDirection","detectChanges","SortIconComponent","guards","directives","TablesService","rotate","asc","desc","SBSortableHeaderDirective","emit","sbSortable","containers"],"mappings":"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","file":"default~modules-dashboard-dashboard-routing-module~modules-tables-tables-routing-module-es5.js","sourcesContent":["export default \"<form>\\n    <div class=\\\"form-group form-inline\\\">Full text search: <input class=\\\"form-control ml-2\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"countryService.searchTerm\\\" /><span class=\\\"ml-3\\\" *ngIf=\\\"countryService.loading$ | async\\\">Loading...</span></div>\\n    <table class=\\\"table table-striped\\\">\\n        <thead>\\n            <tr>\\n                <th scope=\\\"col\\\">#</th>\\n                <th scope=\\\"col\\\" sbSortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"><span>Country</span><sb-sort-icon *ngIf='sortedColumn === \\\"name\\\"' [direction]=\\\"sortedDirection\\\"></sb-sort-icon></th>\\n                <th scope=\\\"col\\\" sbSortable=\\\"area\\\" (sort)=\\\"onSort($event)\\\"><span>Area</span><sb-sort-icon *ngIf='sortedColumn === \\\"area\\\"' [direction]=\\\"sortedDirection\\\"></sb-sort-icon></th>\\n                <th scope=\\\"col\\\" sbSortable=\\\"population\\\" (sort)=\\\"onSort($event)\\\"><span>Population</span><sb-sort-icon *ngIf='sortedColumn === \\\"population\\\"' [direction]=\\\"sortedDirection\\\"></sb-sort-icon></th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let country of countries$ | async\\\">\\n                <th scope=\\\"row\\\">{{ country.id }}</th>\\n                <td><img class=\\\"mr-2\\\" [src]=\\\"'https://upload.wikimedia.org/wikipedia/commons/' + country.flag\\\" style=\\\"width: 20px\\\" /><ngb-highlight [result]=\\\"country.name\\\" [term]=\\\"countryService.searchTerm\\\"></ngb-highlight></td>\\n                <td><ngb-highlight [result]=\\\"country.area | number\\\" [term]=\\\"countryService.searchTerm\\\"></ngb-highlight></td>\\n                <td><ngb-highlight [result]=\\\"country.population | number\\\" [term]=\\\"countryService.searchTerm\\\"></ngb-highlight></td>\\n            </tr>\\n        </tbody>\\n    </table>\\n    <div class=\\\"d-flex justify-content-between p-2\\\">\\n        <ngb-pagination [collectionSize]=\\\"total$ | async\\\" [(page)]=\\\"countryService.page\\\" [pageSize]=\\\"countryService.pageSize\\\"></ngb-pagination\\n        ><select class=\\\"custom-select\\\" style=\\\"width: auto\\\" name=\\\"pageSize\\\" [(ngModel)]=\\\"countryService.pageSize\\\">\\n            <option [ngValue]=\\\"2\\\">2 items per page</option>\\n            <option [ngValue]=\\\"4\\\">4 items per page</option>\\n            <option [ngValue]=\\\"6\\\">6 items per page</option>\\n        </select>\\n    </div>\\n</form>\\n\";","import { Country } from '../models';\n\nexport const COUNTRIES: Country[] = [\n    {\n        id: 1,\n        name: 'Russia',\n        flag: 'f/f3/Flag_of_Russia.svg',\n        area: 17075200,\n        population: 146989754,\n    },\n    {\n        id: 2,\n        name: 'France',\n        flag: 'c/c3/Flag_of_France.svg',\n        area: 640679,\n        population: 64979548,\n    },\n    {\n        id: 3,\n        name: 'Germany',\n        flag: 'b/ba/Flag_of_Germany.svg',\n        area: 357114,\n        population: 82114224,\n    },\n    {\n        id: 4,\n        name: 'Portugal',\n        flag: '5/5c/Flag_of_Portugal.svg',\n        area: 92090,\n        population: 10329506,\n    },\n    {\n        id: 5,\n        name: 'Canada',\n        flag: 'c/cf/Flag_of_Canada.svg',\n        area: 9976140,\n        population: 36624199,\n    },\n    {\n        id: 6,\n        name: 'Vietnam',\n        flag: '2/21/Flag_of_Vietnam.svg',\n        area: 331212,\n        population: 95540800,\n    },\n    {\n        id: 7,\n        name: 'Brazil',\n        flag: '0/05/Flag_of_Brazil.svg',\n        area: 8515767,\n        population: 209288278,\n    },\n    {\n        id: 8,\n        name: 'Mexico',\n        flag: 'f/fc/Flag_of_Mexico.svg',\n        area: 1964375,\n        population: 129163276,\n    },\n    {\n        id: 9,\n        name: 'United States',\n        flag: 'a/a4/Flag_of_the_United_States.svg',\n        area: 9629091,\n        population: 324459463,\n    },\n    {\n        id: 10,\n        name: 'India',\n        flag: '4/41/Flag_of_India.svg',\n        area: 3287263,\n        population: 1324171354,\n    },\n    {\n        id: 11,\n        name: 'Indonesia',\n        flag: '9/9f/Flag_of_Indonesia.svg',\n        area: 1910931,\n        population: 263991379,\n    },\n    {\n        id: 12,\n        name: 'Tuvalu',\n        flag: '3/38/Flag_of_Tuvalu.svg',\n        area: 26,\n        population: 11097,\n    },\n    {\n        id: 13,\n        name: 'China',\n        flag: 'f/fa/Flag_of_the_People%27s_Republic_of_China.svg',\n        area: 9596960,\n        population: 1409517397,\n    },\n];\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class TablesGuard implements CanActivate {\n    canActivate(): Observable<boolean> {\n        return of(true);\n    }\n}\n","import { CountryService } from './country.service';\nimport { TablesService } from './tables.service';\n\nexport const services = [TablesService, CountryService];\n\nexport * from './tables.service';\nexport * from './country.service';\n","export default \"thead > tr > th {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGRhc2hib2FyZFxcY29tcG9uZW50c1xcbmctYm9vdHN0cmFwLXRhYmxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksZUFBQTtBQURKIiwiZmlsZSI6Im5nLWJvb3RzdHJhcC10YWJsZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ3N0eWxlcy92YXJpYWJsZXMuc2Nzcyc7XG5cbnRoZWFkID4gdHIgPiB0aCB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\";","export default \"<sb-layout-dashboard\\n    ><sb-dashboard-head title=\\\"Tables\\\" [hideBreadcrumbs]=\\\"false\\\"></sb-dashboard-head\\n    ><sb-card\\n        ><div class=\\\"card-body\\\">The table below is adapted from ng-bootsrap. For more information, please visit the <a target=\\\"_blank\\\" href=\\\"https://ng-bootstrap.github.io/#/components/table/overview\\\">ng-bootstrap table documentation</a>.</div></sb-card\\n    ><sb-card\\n        ><div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>DataTable Example</div>\\n        <div class=\\\"card-body\\\"><sb-ng-bootstrap-table [pageSize]=\\\"6\\\"></sb-ng-bootstrap-table></div></sb-card\\n></sb-layout-dashboard>\\n\";","import { NgBootstrapTableComponent } from './ng-bootstrap-table/ng-bootstrap-table.component';\nimport { SortIconComponent } from './sort-icon/sort-icon.component';\n\nexport const components = [NgBootstrapTableComponent, SortIconComponent];\n\nexport * from './ng-bootstrap-table/ng-bootstrap-table.component';\nexport * from './sort-icon/sort-icon.component';\n","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { CommonModule, DecimalPipe } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n/* Modules */\nimport { AppCommonModule } from '@common/app-common.module';\nimport { NavigationModule } from '@modules/navigation/navigation.module';\n\n/* Components */\nimport * as tablesComponents from './components';\n\n/* Containers */\nimport * as tablesContainers from './containers';\n\n/* Directives */\nimport * as tablesDirectives from './directives';\n\n/* Guards */\nimport * as tablesGuards from './guards';\n\n/* Services */\nimport * as tablesServices from './services';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        FormsModule,\n        AppCommonModule,\n        NavigationModule,\n    ],\n    providers: [\n        DecimalPipe,\n        ...tablesServices.services,\n        ...tablesGuards.guards,\n        ...tablesDirectives.directives,\n    ],\n    declarations: [\n        ...tablesContainers.containers,\n        ...tablesComponents.components,\n        ...tablesDirectives.directives,\n    ],\n    exports: [...tablesContainers.containers, ...tablesComponents.components],\n})\nexport class TablesModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'sb-tables',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './tables.component.html',\n    styleUrls: ['tables.component.scss'],\n})\nexport class TablesComponent implements OnInit {\n    constructor() {}\n    ngOnInit() {}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0YWJsZXMuY29tcG9uZW50LnNjc3MifQ== */\";","import { DecimalPipe } from '@angular/common';\nimport { Injectable, PipeTransform } from '@angular/core';\nimport { COUNTRIES } from '@modules/tables/data/countries';\nimport { SortDirection } from '@modules/tables/directives';\nimport { Country } from '@modules/tables/models';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { debounceTime, delay, switchMap, tap } from 'rxjs/operators';\n\ninterface SearchResult {\n    countries: Country[];\n    total: number;\n}\n\ninterface State {\n    page: number;\n    pageSize: number;\n    searchTerm: string;\n    sortColumn: string;\n    sortDirection: SortDirection;\n}\n\nfunction compare(v1: number | string, v2: number | string) {\n    return v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\n}\n\nfunction sort(countries: Country[], column: string, direction: string): Country[] {\n    if (direction === '') {\n        return countries;\n    } else {\n        return [...countries].sort((a, b) => {\n            const res = compare(a[column], b[column]);\n            return direction === 'asc' ? res : -res;\n        });\n    }\n}\n\nfunction matches(country: Country, term: string, pipe: PipeTransform) {\n    return (\n        country.name.toLowerCase().includes(term.toLowerCase()) ||\n        pipe.transform(country.area).includes(term) ||\n        pipe.transform(country.population).includes(term)\n    );\n}\n\n@Injectable({ providedIn: 'root' })\nexport class CountryService {\n    private _loading$ = new BehaviorSubject<boolean>(true);\n    private _search$ = new Subject<void>();\n    private _countries$ = new BehaviorSubject<Country[]>([]);\n    private _total$ = new BehaviorSubject<number>(0);\n\n    private _state: State = {\n        page: 1,\n        pageSize: 4,\n        searchTerm: '',\n        sortColumn: '',\n        sortDirection: '',\n    };\n\n    constructor(private pipe: DecimalPipe) {\n        this._search$\n            .pipe(\n                tap(() => this._loading$.next(true)),\n                debounceTime(120),\n                switchMap(() => this._search()),\n                delay(120),\n                tap(() => this._loading$.next(false))\n            )\n            .subscribe(result => {\n                this._countries$.next(result.countries);\n                this._total$.next(result.total);\n            });\n\n        this._search$.next();\n    }\n\n    get countries$() {\n        return this._countries$.asObservable();\n    }\n    get total$() {\n        return this._total$.asObservable();\n    }\n    get loading$() {\n        return this._loading$.asObservable();\n    }\n    get page() {\n        return this._state.page;\n    }\n    set page(page: number) {\n        this._set({ page });\n    }\n    get pageSize() {\n        return this._state.pageSize;\n    }\n    set pageSize(pageSize: number) {\n        this._set({ pageSize });\n    }\n    get searchTerm() {\n        return this._state.searchTerm;\n    }\n    set searchTerm(searchTerm: string) {\n        this._set({ searchTerm });\n    }\n    set sortColumn(sortColumn: string) {\n        this._set({ sortColumn });\n    }\n    set sortDirection(sortDirection: SortDirection) {\n        this._set({ sortDirection });\n    }\n\n    private _set(patch: Partial<State>) {\n        Object.assign(this._state, patch);\n        this._search$.next();\n    }\n\n    private _search(): Observable<SearchResult> {\n        const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\n\n        // 1. sort\n        let countries = sort(COUNTRIES, sortColumn, sortDirection);\n\n        // 2. filter\n        countries = countries.filter(country => matches(country, searchTerm, this.pipe));\n        const total = countries.length;\n\n        // 3. paginate\n        countries = countries.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\n        return of({ countries, total });\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    OnInit,\n    QueryList,\n    ViewChildren,\n} from '@angular/core';\nimport { SBSortableHeaderDirective, SortEvent } from '@modules/tables/directives';\nimport { Country } from '@modules/tables/models';\nimport { CountryService } from '@modules/tables/services';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'sb-ng-bootstrap-table',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './ng-bootstrap-table.component.html',\n    styleUrls: ['ng-bootstrap-table.component.scss'],\n})\nexport class NgBootstrapTableComponent implements OnInit {\n    @Input() pageSize = 4;\n\n    countries$!: Observable<Country[]>;\n    total$!: Observable<number>;\n    sortedColumn!: string;\n    sortedDirection!: string;\n\n    @ViewChildren(SBSortableHeaderDirective) headers!: QueryList<SBSortableHeaderDirective>;\n\n    constructor(\n        public countryService: CountryService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    ngOnInit() {\n        this.countryService.pageSize = this.pageSize;\n        this.countries$ = this.countryService.countries$;\n        this.total$ = this.countryService.total$;\n    }\n\n    onSort({ column, direction }: SortEvent) {\n        this.sortedColumn = column;\n        this.sortedDirection = direction;\n        this.countryService.sortColumn = column;\n        this.countryService.sortDirection = direction;\n        this.changeDetectorRef.detectChanges();\n    }\n}\n","export default \".sort-icon {\\n  height: 0.9rem;\\n  width: 0.9rem;\\n  margin-left: 0.25rem;\\n  margin-top: -0.125rem;\\n  vertical-align: middle;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGRhc2hib2FyZFxcY29tcG9uZW50c1xcc29ydC1pY29uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksY0FBQTtFQUNBLGFBQUE7RUFDQSxvQkFBQTtFQUNBLHFCQUFBO0VBQ0Esc0JBQUE7QUFESiIsImZpbGUiOiJzb3J0LWljb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICdzdHlsZXMvdmFyaWFibGVzLnNjc3MnO1xuXG4uc29ydC1pY29uIHtcbiAgICBoZWlnaHQ6IDAuOXJlbTtcbiAgICB3aWR0aDogMC45cmVtO1xuICAgIG1hcmdpbi1sZWZ0OiAwLjI1cmVtO1xuICAgIG1hcmdpbi10b3A6IC0wLjEyNXJlbTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuIl19 */\";","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'sb-sort-icon',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './sort-icon.component.html',\n    styleUrls: ['sort-icon.component.scss'],\n})\nexport class SortIconComponent implements OnInit {\n    @Input() direction!: string;\n\n    constructor() {}\n    ngOnInit() {}\n}\n","export default \"<ng-container *ngIf='direction === \\\"asc\\\"'><fa-icon class=\\\"sort-icon\\\" [icon]='[\\\"fas\\\", \\\"chevron-up\\\"]'></fa-icon></ng-container><ng-container *ngIf='direction === \\\"desc\\\"'><fa-icon class=\\\"sort-icon\\\" [icon]='[\\\"fas\\\", \\\"chevron-down\\\"]'></fa-icon></ng-container>\\n\";","import { TablesGuard } from './tables.guard';\n\nexport const guards = [TablesGuard];\n\nexport * from './tables.guard';\n","import { SBSortableHeaderDirective } from './sortable.directive';\n\nexport const directives = [SBSortableHeaderDirective];\n\nexport * from './sortable.directive';\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class TablesService {\n    constructor() {}\n\n    getTables$(): Observable<{}> {\n        return of({});\n    }\n}\n","import { Directive, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';\n\nexport type SortDirection = 'asc' | 'desc' | '';\nconst rotate: { [key: string]: SortDirection } = { asc: 'desc', desc: '', '': 'asc' };\n\nexport interface SortEvent {\n    column: string;\n    direction: SortDirection;\n}\n\n@Directive({\n    selector: 'th[sbSortable]',\n})\nexport class SBSortableHeaderDirective {\n    @Input() sbSortable!: string;\n    @Input() direction: SortDirection = '';\n    @Output() sort = new EventEmitter<SortEvent>();\n\n    @HostBinding('class.asc') get isAscending() {\n        return this.direction === 'asc';\n    }\n    @HostBinding('class.desc') get isDescending() {\n        return this.direction === 'desc';\n    }\n    @HostListener('click') rotate() {\n        this.direction = rotate[this.direction];\n        this.sort.emit({ column: this.sbSortable, direction: this.direction });\n    }\n}\n","import { TablesComponent } from './tables/tables.component';\n\nexport const containers = [TablesComponent];\n\nexport * from './tables/tables.component';\n"]}